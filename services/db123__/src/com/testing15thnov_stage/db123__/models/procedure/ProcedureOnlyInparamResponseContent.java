/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing15thnov_stage.db123__.models.procedure;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Time;
import java.util.List;
import java.util.Objects;

import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class ProcedureOnlyInparamResponseContent implements Serializable {


    @ColumnAlias("ASSIGNED ID")
    private Integer assignedId;

    @ColumnAlias("BYTE COL")
    private Byte byteCol;

    @ColumnAlias("SHORT COL")
    private Short shortCol;

    @ColumnAlias("INT COL")
    private Integer intCol;

    @ColumnAlias("FLOAT COL")
    private Double floatCol;

    @ColumnAlias("LONG COL")
    private Long longCol;

    @ColumnAlias("DOUBLE COL")
    private BigDecimal doubleCol;

    @ColumnAlias("BIGINT COL")
    private BigInteger bigintCol;

    @ColumnAlias("BIGDEC COL")
    private BigDecimal bigdecCol;

    @ColumnAlias("CHAR COL")
    private String charCol;

    @ColumnAlias("STRING COL")
    private String stringCol;

    @ColumnAlias("TEXT COL")
    private String textCol;

    @ColumnAlias("CLOB COL")
    private String clobCol;

    @ColumnAlias("DATE COL")
    private Date dateCol;

    @ColumnAlias("DATETIME COL")
    private LocalDateTime datetimeCol;

    @ColumnAlias("TIME COL")
    private Time timeCol;

    @ColumnAlias("TIMESTAMP COL")
    private LocalDateTime timestampCol;

    @ColumnAlias("BOOLEAN COL")
    private Boolean booleanCol;

    @JsonProperty(access = Access.READ_ONLY)
    @ColumnAlias("BLOB COL")
    private byte[] blobCol;

    public Integer getAssignedId() {
        return this.assignedId;
    }

    public void setAssignedId(Integer assignedId) {
        this.assignedId = assignedId;
    }

    public Byte getByteCol() {
        return this.byteCol;
    }

    public void setByteCol(Byte byteCol) {
        this.byteCol = byteCol;
    }

    public Short getShortCol() {
        return this.shortCol;
    }

    public void setShortCol(Short shortCol) {
        this.shortCol = shortCol;
    }

    public Integer getIntCol() {
        return this.intCol;
    }

    public void setIntCol(Integer intCol) {
        this.intCol = intCol;
    }

    public Double getFloatCol() {
        return this.floatCol;
    }

    public void setFloatCol(Double floatCol) {
        this.floatCol = floatCol;
    }

    public Long getLongCol() {
        return this.longCol;
    }

    public void setLongCol(Long longCol) {
        this.longCol = longCol;
    }

    public BigDecimal getDoubleCol() {
        return this.doubleCol;
    }

    public void setDoubleCol(BigDecimal doubleCol) {
        this.doubleCol = doubleCol;
    }

    public BigInteger getBigintCol() {
        return this.bigintCol;
    }

    public void setBigintCol(BigInteger bigintCol) {
        this.bigintCol = bigintCol;
    }

    public BigDecimal getBigdecCol() {
        return this.bigdecCol;
    }

    public void setBigdecCol(BigDecimal bigdecCol) {
        this.bigdecCol = bigdecCol;
    }

    public String getCharCol() {
        return this.charCol;
    }

    public void setCharCol(String charCol) {
        this.charCol = charCol;
    }

    public String getStringCol() {
        return this.stringCol;
    }

    public void setStringCol(String stringCol) {
        this.stringCol = stringCol;
    }

    public String getTextCol() {
        return this.textCol;
    }

    public void setTextCol(String textCol) {
        this.textCol = textCol;
    }

    public String getClobCol() {
        return this.clobCol;
    }

    public void setClobCol(String clobCol) {
        this.clobCol = clobCol;
    }

    public Date getDateCol() {
        return this.dateCol;
    }

    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    public LocalDateTime getDatetimeCol() {
        return this.datetimeCol;
    }

    public void setDatetimeCol(LocalDateTime datetimeCol) {
        this.datetimeCol = datetimeCol;
    }

    public Time getTimeCol() {
        return this.timeCol;
    }

    public void setTimeCol(Time timeCol) {
        this.timeCol = timeCol;
    }

    public LocalDateTime getTimestampCol() {
        return this.timestampCol;
    }

    public void setTimestampCol(LocalDateTime timestampCol) {
        this.timestampCol = timestampCol;
    }

    public Boolean getBooleanCol() {
        return this.booleanCol;
    }

    public void setBooleanCol(Boolean booleanCol) {
        this.booleanCol = booleanCol;
    }

    public byte[] getBlobCol() {
        return this.blobCol;
    }

    public void setBlobCol(byte[] blobCol) {
        this.blobCol = blobCol;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ProcedureOnlyInparamResponseContent)) return false;
        final ProcedureOnlyInparamResponseContent procedureOnlyInparamResponseContent = (ProcedureOnlyInparamResponseContent) o;
        return Objects.equals(getAssignedId(), procedureOnlyInparamResponseContent.getAssignedId()) &&
                Objects.equals(getByteCol(), procedureOnlyInparamResponseContent.getByteCol()) &&
                Objects.equals(getShortCol(), procedureOnlyInparamResponseContent.getShortCol()) &&
                Objects.equals(getIntCol(), procedureOnlyInparamResponseContent.getIntCol()) &&
                Objects.equals(getFloatCol(), procedureOnlyInparamResponseContent.getFloatCol()) &&
                Objects.equals(getLongCol(), procedureOnlyInparamResponseContent.getLongCol()) &&
                Objects.equals(getDoubleCol(), procedureOnlyInparamResponseContent.getDoubleCol()) &&
                Objects.equals(getBigintCol(), procedureOnlyInparamResponseContent.getBigintCol()) &&
                Objects.equals(getBigdecCol(), procedureOnlyInparamResponseContent.getBigdecCol()) &&
                Objects.equals(getCharCol(), procedureOnlyInparamResponseContent.getCharCol()) &&
                Objects.equals(getStringCol(), procedureOnlyInparamResponseContent.getStringCol()) &&
                Objects.equals(getTextCol(), procedureOnlyInparamResponseContent.getTextCol()) &&
                Objects.equals(getClobCol(), procedureOnlyInparamResponseContent.getClobCol()) &&
                Objects.equals(getDateCol(), procedureOnlyInparamResponseContent.getDateCol()) &&
                Objects.equals(getDatetimeCol(), procedureOnlyInparamResponseContent.getDatetimeCol()) &&
                Objects.equals(getTimeCol(), procedureOnlyInparamResponseContent.getTimeCol()) &&
                Objects.equals(getTimestampCol(), procedureOnlyInparamResponseContent.getTimestampCol()) &&
                Objects.equals(getBooleanCol(), procedureOnlyInparamResponseContent.getBooleanCol()) &&
                Objects.equals(getBlobCol(), procedureOnlyInparamResponseContent.getBlobCol());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getAssignedId(),
                getByteCol(),
                getShortCol(),
                getIntCol(),
                getFloatCol(),
                getLongCol(),
                getDoubleCol(),
                getBigintCol(),
                getBigdecCol(),
                getCharCol(),
                getStringCol(),
                getTextCol(),
                getClobCol(),
                getDateCol(),
                getDatetimeCol(),
                getTimeCol(),
                getTimestampCol(),
                getBooleanCol(),
                getBlobCol());
    }
}
