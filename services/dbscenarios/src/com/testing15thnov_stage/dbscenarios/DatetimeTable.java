/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing15thnov_stage.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

/**
 * DatetimeTable generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`DATETIME_TABLE`")
public class DatetimeTable implements Serializable {

    private Integer id;
    @Type(type = "DateTime")
    private LocalDateTime datetimecol1;
    @Type(type = "DateTime")
    private LocalDateTime datetimecol2;
    @Type(type = "DateTime")
    private LocalDateTime datetimecol3;
    @Type(type = "DateTime")
    private LocalDateTime timestampcol;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`DATETIMECOL1`", nullable = true)
    public LocalDateTime getDatetimecol1() {
        return this.datetimecol1;
    }

    public void setDatetimecol1(LocalDateTime datetimecol1) {
        this.datetimecol1 = datetimecol1;
    }

    @Column(name = "`DATETIMECOL2`", nullable = true)
    public LocalDateTime getDatetimecol2() {
        return this.datetimecol2;
    }

    public void setDatetimecol2(LocalDateTime datetimecol2) {
        this.datetimecol2 = datetimecol2;
    }

    @Column(name = "`DATETIMECOL3`", nullable = true)
    public LocalDateTime getDatetimecol3() {
        return this.datetimecol3;
    }

    public void setDatetimecol3(LocalDateTime datetimecol3) {
        this.datetimecol3 = datetimecol3;
    }

    @Column(name = "`TIMESTAMPCOL`", nullable = true)
    public LocalDateTime getTimestampcol() {
        return this.timestampcol;
    }

    public void setTimestampcol(LocalDateTime timestampcol) {
        this.timestampcol = timestampcol;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DatetimeTable)) return false;
        final DatetimeTable datetimeTable = (DatetimeTable) o;
        return Objects.equals(getId(), datetimeTable.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

