/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing15thnov_stage.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * TCompositesMany2one generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`T_COMPOSITES_MANY2ONE`")
@IdClass(TCompositesMany2oneId.class)
public class TCompositesMany2one implements Serializable {

    private Short byteId;
    private Short shortId;
    private String charId;
    private BigDecimal bigdecId;
    private Date dateCol;
    private Boolean booleanCol;
    private List<TCompositesMany2one1> tcompositesMany2one1s;

    @Id
    @Column(name = "`BYTE ID`", nullable = false, scale = 0, precision = 3)
    public Short getByteId() {
        return this.byteId;
    }

    public void setByteId(Short byteId) {
        this.byteId = byteId;
    }

    @Id
    @Column(name = "`SHORT ID`", nullable = false, scale = 0, precision = 5)
    public Short getShortId() {
        return this.shortId;
    }

    public void setShortId(Short shortId) {
        this.shortId = shortId;
    }

    @Id
    @Column(name = "`CHAR ID`", nullable = false, length = 1)
    public String getCharId() {
        return this.charId;
    }

    public void setCharId(String charId) {
        this.charId = charId;
    }

    @Id
    @Column(name = "`BIGDEC ID`", nullable = false, scale = 15, precision = 35)
    public BigDecimal getBigdecId() {
        return this.bigdecId;
    }

    public void setBigdecId(BigDecimal bigdecId) {
        this.bigdecId = bigdecId;
    }

    @Column(name = "`DATE COL`", nullable = true)
    public Date getDateCol() {
        return this.dateCol;
    }

    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    @Column(name = "`BOOLEAN COL`", nullable = true)
    public Boolean getBooleanCol() {
        return this.booleanCol;
    }

    public void setBooleanCol(Boolean booleanCol) {
        this.booleanCol = booleanCol;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "tcompositesMany2one")
    public List<TCompositesMany2one1> getTcompositesMany2one1s() {
        return this.tcompositesMany2one1s;
    }

    public void setTcompositesMany2one1s(List<TCompositesMany2one1> tcompositesMany2one1s) {
        this.tcompositesMany2one1s = tcompositesMany2one1s;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TCompositesMany2one)) return false;
        final TCompositesMany2one tcompositesMany2one = (TCompositesMany2one) o;
        return Objects.equals(getByteId(), tcompositesMany2one.getByteId()) &&
                Objects.equals(getShortId(), tcompositesMany2one.getShortId()) &&
                Objects.equals(getCharId(), tcompositesMany2one.getCharId()) &&
                Objects.equals(getBigdecId(), tcompositesMany2one.getBigdecId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getByteId(),
                getShortId(),
                getCharId(),
                getBigdecId());
    }
}

