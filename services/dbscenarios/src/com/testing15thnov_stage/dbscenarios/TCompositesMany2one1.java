/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing15thnov_stage.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * TCompositesMany2one1 generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`T_COMPOSITES_MANY2ONE1`")
public class TCompositesMany2one1 implements Serializable {

    private Integer id;
    private Short byteId;
    private Short shortId;
    private String charId;
    private BigDecimal bigdecId;
    private Timestamp timestampCol;
    private TCompositesMany2one tcompositesMany2one;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`BYTE ID`", nullable = true, scale = 0, precision = 3)
    public Short getByteId() {
        return this.byteId;
    }

    public void setByteId(Short byteId) {
        this.byteId = byteId;
    }

    @Column(name = "`SHORT ID`", nullable = true, scale = 0, precision = 5)
    public Short getShortId() {
        return this.shortId;
    }

    public void setShortId(Short shortId) {
        this.shortId = shortId;
    }

    @Column(name = "`CHAR ID`", nullable = true, length = 1)
    public String getCharId() {
        return this.charId;
    }

    public void setCharId(String charId) {
        this.charId = charId;
    }

    @Column(name = "`BIGDEC ID`", nullable = true, scale = 15, precision = 35)
    public BigDecimal getBigdecId() {
        return this.bigdecId;
    }

    public void setBigdecId(BigDecimal bigdecId) {
        this.bigdecId = bigdecId;
    }

    @Column(name = "`TIMESTAMP COL`", nullable = false)
    public Timestamp getTimestampCol() {
        return this.timestampCol;
    }

    public void setTimestampCol(Timestamp timestampCol) {
        this.timestampCol = timestampCol;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumns(value = {
            @JoinColumn(name = "`BYTE ID`", referencedColumnName = "`BYTE ID`", insertable = false, updatable = false),
            @JoinColumn(name = "`SHORT ID`", referencedColumnName = "`SHORT ID`", insertable = false, updatable = false),
            @JoinColumn(name = "`CHAR ID`", referencedColumnName = "`CHAR ID`", insertable = false, updatable = false),
            @JoinColumn(name = "`BIGDEC ID`", referencedColumnName = "`BIGDEC ID`", insertable = false, updatable = false)},
        foreignKey = @ForeignKey(name = "`FK_T_COMPOSITES_MANY2ONEikvhe`"))
    public TCompositesMany2one getTcompositesMany2one() {
        return this.tcompositesMany2one;
    }

    public void setTcompositesMany2one(TCompositesMany2one tcompositesMany2one) {
        if(tcompositesMany2one != null) {
            this.byteId = tcompositesMany2one.getByteId();
            this.shortId = tcompositesMany2one.getShortId();
            this.charId = tcompositesMany2one.getCharId();
            this.bigdecId = tcompositesMany2one.getBigdecId();
        }

        this.tcompositesMany2one = tcompositesMany2one;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TCompositesMany2one1)) return false;
        final TCompositesMany2one1 tcompositesMany2one1 = (TCompositesMany2one1) o;
        return Objects.equals(getId(), tcompositesMany2one1.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

