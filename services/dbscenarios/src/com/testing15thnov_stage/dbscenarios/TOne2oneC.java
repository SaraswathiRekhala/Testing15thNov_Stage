/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing15thnov_stage.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

/**
 * TOne2oneC generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`T ONE2ONE C`")
public class TOne2oneC implements Serializable {

    private Short byteId;
    private Boolean booleanCol;
    @Type(type = "DateTime")
    private LocalDateTime datetimeCol;
    private String stringCol;
    private TOne2oneP tone2oneP;

    @Id
    @GenericGenerator(name = "generator", strategy = "foreign", 
            parameters = @Parameter(name = "property", value = "tone2oneP"))
    @GeneratedValue(generator = "generator")
    @Column(name = "`BYTE ID`", nullable = false, insertable = false, updatable = false, scale = 0, precision = 3)
    public Short getByteId() {
        return this.byteId;
    }

    public void setByteId(Short byteId) {
        this.byteId = byteId;
    }

    @Column(name = "`BOOLEAN COL`", nullable = true)
    public Boolean getBooleanCol() {
        return this.booleanCol;
    }

    public void setBooleanCol(Boolean booleanCol) {
        this.booleanCol = booleanCol;
    }

    @Column(name = "`DATETIME COL`", nullable = true)
    public LocalDateTime getDatetimeCol() {
        return this.datetimeCol;
    }

    public void setDatetimeCol(LocalDateTime datetimeCol) {
        this.datetimeCol = datetimeCol;
    }

    @Column(name = "`string col`", nullable = true, length = 255)
    public String getStringCol() {
        return this.stringCol;
    }

    public void setStringCol(String stringCol) {
        this.stringCol = stringCol;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @PrimaryKeyJoinColumn
    public TOne2oneP getTone2oneP() {
        return this.tone2oneP;
    }

    public void setTone2oneP(TOne2oneP tone2oneP) {
        if(tone2oneP != null) {
            this.byteId = tone2oneP.getByteCol();
        }

        this.tone2oneP = tone2oneP;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TOne2oneC)) return false;
        final TOne2oneC tone2oneC = (TOne2oneC) o;
        return Objects.equals(getByteId(), tone2oneC.getByteId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getByteId());
    }
}

