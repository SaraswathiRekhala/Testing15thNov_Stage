/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing15thnov_stage.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * TUcComposites2 generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`T UC COMPOSITES2`")
@IdClass(TUcComposites2Id.class)
public class TUcComposites2 implements Serializable {

    private Short byteId;
    private String charCol;
    private Short shortCol;
    private String stringCol;
    private String column5;
    private TUcComposites1 tucComposites1;

    @Id
    @Column(name = "`BYTE ID`", nullable = false, scale = 0, precision = 3)
    public Short getByteId() {
        return this.byteId;
    }

    public void setByteId(Short byteId) {
        this.byteId = byteId;
    }

    @Id
    @Column(name = "`CHAR COL`", nullable = false, length = 1)
    public String getCharCol() {
        return this.charCol;
    }

    public void setCharCol(String charCol) {
        this.charCol = charCol;
    }

    @Id
    @Column(name = "`SHORT COL`", nullable = false, scale = 0, precision = 5)
    public Short getShortCol() {
        return this.shortCol;
    }

    public void setShortCol(Short shortCol) {
        this.shortCol = shortCol;
    }

    @Id
    @Column(name = "`STRING COL`", nullable = false, length = 255)
    public String getStringCol() {
        return this.stringCol;
    }

    public void setStringCol(String stringCol) {
        this.stringCol = stringCol;
    }

    @Column(name = "`COLUMN5`", nullable = false, length = 255)
    public String getColumn5() {
        return this.column5;
    }

    public void setColumn5(String column5) {
        this.column5 = column5;
    }

    @OneToOne(fetch = FetchType.EAGER, cascade = CascadeType.REMOVE, mappedBy = "tucComposites2")
    public TUcComposites1 getTucComposites1() {
        return this.tucComposites1;
    }

    public void setTucComposites1(TUcComposites1 tucComposites1) {
        this.tucComposites1 = tucComposites1;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TUcComposites2)) return false;
        final TUcComposites2 tucComposites2 = (TUcComposites2) o;
        return Objects.equals(getByteId(), tucComposites2.getByteId()) &&
                Objects.equals(getCharCol(), tucComposites2.getCharCol()) &&
                Objects.equals(getShortCol(), tucComposites2.getShortCol()) &&
                Objects.equals(getStringCol(), tucComposites2.getStringCol());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getByteId(),
                getCharCol(),
                getShortCol(),
                getStringCol());
    }
}

