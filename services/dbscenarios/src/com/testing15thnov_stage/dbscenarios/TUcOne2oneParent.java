/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing15thnov_stage.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * TUcOne2oneParent generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`T_UC_ONE2ONE PARENT`", uniqueConstraints = {
        @UniqueConstraint(name = "`UK_T_UC_ONE2ONE_PARENT_BvsWfR`", columnNames = {"`SHORT COL`"})})
public class TUcOne2oneParent implements Serializable {

    private Integer pkId;
    private String charCol;
    private Date dateCol;
    private Boolean booleanCol;
    private Short shortCol;
    private TUcOne2oneChild tucOne2oneChild;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PK ID`", nullable = false, scale = 0, precision = 10)
    public Integer getPkId() {
        return this.pkId;
    }

    public void setPkId(Integer pkId) {
        this.pkId = pkId;
    }

    @Column(name = "`CHAR COL`", nullable = true, length = 1)
    public String getCharCol() {
        return this.charCol;
    }

    public void setCharCol(String charCol) {
        this.charCol = charCol;
    }

    @Column(name = "`DATE COL`", nullable = true)
    public Date getDateCol() {
        return this.dateCol;
    }

    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    @Column(name = "`BOOLEAN COL`", nullable = true)
    public Boolean getBooleanCol() {
        return this.booleanCol;
    }

    public void setBooleanCol(Boolean booleanCol) {
        this.booleanCol = booleanCol;
    }

    @Column(name = "`SHORT COL`", nullable = true, scale = 0, precision = 5)
    public Short getShortCol() {
        return this.shortCol;
    }

    public void setShortCol(Short shortCol) {
        this.shortCol = shortCol;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`SHORT COL`", referencedColumnName = "`SHORTID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_T_UC_ONE2ONE_PARENT_THKHlJ`"))
    public TUcOne2oneChild getTucOne2oneChild() {
        return this.tucOne2oneChild;
    }

    public void setTucOne2oneChild(TUcOne2oneChild tucOne2oneChild) {
        if(tucOne2oneChild != null) {
            this.shortCol = tucOne2oneChild.getShortid();
        }

        this.tucOne2oneChild = tucOne2oneChild;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TUcOne2oneParent)) return false;
        final TUcOne2oneParent tucOne2oneParent = (TUcOne2oneParent) o;
        return Objects.equals(getPkId(), tucOne2oneParent.getPkId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPkId());
    }
}

